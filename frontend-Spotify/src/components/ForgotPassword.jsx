import React, { useState } from "react";
import { toast } from "react-toastify";
import { resetOtpPassword, resetPassword } from "../apis/emailApi";  // Gi·∫£ s·ª≠ resetOtpPassword l√† API b·∫°n ƒë√£ t·∫°o
import { useNavigate } from "react-router-dom";

const ForgotPassword = () => {
    const [email, setEmail] = useState("");
    const [loading, setLoading] = useState(false);
    const [showResetForm, setShowResetForm] = useState(false);  // Bi·∫øn tr·∫°ng th√°i ƒë·ªÉ hi·ªÉn th·ªã form reset m·∫≠t kh·∫©u
    const [otp, setOtp] = useState("");  // ƒê·ªÉ l∆∞u OTP t·ª´ ng∆∞·ªùi d√πng
    const [password, setPassword] = useState("");  // ƒê·ªÉ l∆∞u m·∫≠t kh·∫©u m·ªõi
    const navigate = useNavigate();

    // X·ª≠ l√Ω g·ª≠i y√™u c·∫ßu OTP qua email
    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);

        try {
            // G·ª≠i y√™u c·∫ßu email ƒë·ªÉ reset m·∫≠t kh·∫©u
            await resetOtpPassword(email, setEmail ,setLoading);
            setShowResetForm(true);  // Hi·ªÉn th·ªã form reset m·∫≠t kh·∫©u khi g·ª≠i email th√†nh c√¥ng
           
        } catch (error) {
            toast.error(error || "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i.");
        } finally {
            setLoading(false);
        }
    };

    // X·ª≠ l√Ω submit khi ng∆∞·ªùi d√πng nh·∫≠p OTP v√† m·∫≠t kh·∫©u m·ªõi
    const handleResetSubmit = async (e) => {
        e.preventDefault();
    
        try {
            await resetPassword({email, otp, password, setEmail,setLoading,});
            setOtp("");        // X√≥a OTP sau khi reset th√†nh c√¥ng
            setPassword("");   // X√≥a m·∫≠t kh·∫©u sau khi reset th√†nh c√¥ng
            navigate("/login");
        } catch (error) {
            // L·ªói ƒë√£ ƒë∆∞·ª£c toast trong h√†m resetPassword n√™n c√≥ th·ªÉ ƒë·ªÉ tr·ªëng ho·∫∑c log th√™m n·∫øu c·∫ßn
            console.error("Reset password failed:", error);
        }
    };
    
    return (
        <div className="w-full h-screen flex items-center justify-center bg-black text-white">
            <div className="bg-[#121212] p-8 rounded-2xl shadow-lg w-[90%] max-w-md">
                <h2 className="text-2xl font-bold mb-6 text-center">
                    üîê Qu√™n m·∫≠t kh·∫©u
                </h2>

                {/* Form g·ª≠i email */}
                {!showResetForm && (
                    <form onSubmit={handleSubmit} className="flex flex-col gap-4">
                        <input
                            type="email"
                            placeholder="Nh·∫≠p email ƒë√£ ƒëƒÉng k√Ω"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            required
                            className="px-4 py-2 rounded bg-[#1e1e1e] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                        <button
                            type="submit"
                            className="bg-green-500 hover:bg-green-600 transition-all py-2 rounded font-semibold mt-6 disabled:opacity-50"
                            disabled={loading}
                        >
                            {loading ? "ƒêang g·ª≠i..." : "G·ª≠i li√™n k·∫øt ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u"}
                        </button>
                    </form>
                )}

                {/* Form reset m·∫≠t kh·∫©u, ch·ªâ hi·ªÉn th·ªã sau khi email g·ª≠i th√†nh c√¥ng */}
                {showResetForm && (
                    <form onSubmit={handleResetSubmit} className="flex flex-col gap-4">
                        <input
                            type="text"
                            placeholder="Nh·∫≠p OTP"
                            value={otp}
                            onChange={(e) => setOtp(e.target.value)}
                            required
                            className="px-4 py-2 rounded bg-[#1e1e1e] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                        <input
                            type="password"
                            placeholder="M·∫≠t kh·∫©u m·ªõi"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            required
                            className="px-4 py-2 rounded bg-[#1e1e1e] border border-[#333] text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                        />
                        <button
                            type="submit"
                            className="bg-green-500 hover:bg-green-600 transition-all py-2 rounded font-semibold mt-6 disabled:opacity-50"
                            disabled={loading}
                        >
                            {loading ? "ƒêang c·∫≠p nh·∫≠t..." : "C·∫≠p nh·∫≠t m·∫≠t kh·∫©u"}
                        </button>
                    </form>
                )}
            </div>
        </div>
    );
};

export default ForgotPassword;
